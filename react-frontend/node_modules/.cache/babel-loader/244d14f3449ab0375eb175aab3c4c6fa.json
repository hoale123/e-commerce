{"ast":null,"code":"var _jsxFileName = \"/Users/timle/e-commerce/react-frontend/src/ShowDrinks.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport ShowOneDrink from './ShowOneDrink';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShowDrinks(_ref) {\n  _s();\n\n  let {\n    data,\n    user\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const potato = data.filter(item => item.id === parseInt(id));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: potato.map(lmao => {\n      return /*#__PURE__*/_jsxDEV(ShowOneDrink, {\n        potato: potato,\n        lmao: lmao,\n        user: user\n      }, lmao.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(ShowDrinks, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = ShowDrinks;\nexport default ShowDrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDrinks\");","map":{"version":3,"sources":["/Users/timle/e-commerce/react-frontend/src/ShowDrinks.js"],"names":["useParams","ShowOneDrink","ShowDrinks","data","user","id","potato","filter","item","parseInt","map","lmao"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAGA,SAASC,UAAT,OAAkC;AAAA;;AAAA,MAAd;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAc;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAMM,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYI,QAAQ,CAACJ,EAAD,CAA1C,CAAf;AAEA,sBACI;AAAA,cACAC,MAAM,CAACI,GAAP,CAAYC,IAAD,IAAU;AACzB,0BAAO,QAAC,YAAD;AAA4B,QAAA,MAAM,EAAEL,MAApC;AAA4C,QAAA,IAAI,EAAEK,IAAlD;AAAwD,QAAA,IAAI,EAAEP;AAA9D,SAAmBO,IAAI,CAACN,EAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AAA8E,KAD1E;AADA,mBADJ;AAME;;GAVGH,U;UACUF,S;;;KADVE,U;AAYT,eAAeA,UAAf","sourcesContent":["import { useParams } from 'react-router-dom'\nimport ShowOneDrink from './ShowOneDrink'\n\n\nfunction ShowDrinks({data, user }){\n    const { id } = useParams();\n    const potato = data.filter((item) => item.id === parseInt(id))\n    \n    return (\n        <>\n       {potato.map((lmao) => {\n    return <ShowOneDrink key={lmao.id} potato={potato} lmao={lmao} user={user} />})}\n    \n        </>\n    )}\n\nexport default ShowDrinks;"]},"metadata":{},"sourceType":"module"}