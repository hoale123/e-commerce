{"ast":null,"code":"var _jsxFileName = \"/Users/timle/e-commerce/react-frontend/src/ShowDrinks.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport ShowOneDrink from './ShowOneDrink';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShowDrinks(_ref) {\n  _s();\n\n  let {\n    products\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const potato = products.filter(item => item.id === parseInt(id));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: potato.map(product => {\n      return /*#__PURE__*/_jsxDEV(ShowOneDrink, {\n        potato: potato,\n        lmao: lmao\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(ShowDrinks, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = ShowDrinks;\nexport default ShowDrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDrinks\");","map":{"version":3,"sources":["/Users/timle/e-commerce/react-frontend/src/ShowDrinks.js"],"names":["useParams","ShowOneDrink","ShowDrinks","products","id","potato","filter","item","parseInt","map","product","lmao"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAGA,SAASC,UAAT,OAAgC;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAMK,MAAM,GAAGF,QAAQ,CAACG,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYI,QAAQ,CAACJ,EAAD,CAA9C,CAAf;AAEA,sBACI;AAAA,cACAC,MAAM,CAACI,GAAP,CAAYC,OAAD,IAAa;AAC5B,0BAAO,QAAC,YAAD;AAA+B,QAAA,MAAM,EAAEL,MAAvC;AAA+C,QAAA,IAAI,EAAEM;AAArD,SAAmBD,OAAO,CAACN,EAA3B;AAAA;AAAA;AAAA;AAAA,cAAP;AAAsE,KADlE;AADA,mBADJ;AAME;;GAVGF,U;UACUF,S;;;KADVE,U;AAYT,eAAeA,UAAf","sourcesContent":["import { useParams } from 'react-router-dom'\nimport ShowOneDrink from './ShowOneDrink'\n\n\nfunction ShowDrinks({products }){\n    const { id } = useParams();\n    const potato = products.filter((item) => item.id === parseInt(id))\n    \n    return (\n        <>\n       {potato.map((product) => {\n    return <ShowOneDrink key={product.id} potato={potato} lmao={lmao}  />})}\n    \n        </>\n    )}\n\nexport default ShowDrinks;"]},"metadata":{},"sourceType":"module"}